<?php

require_once dirname(__FILE__) . '/../geonames_data_provider.php';

/**
 * Test class for geonames_data_provider.
 * Generated by PHPUnit on 2012-08-25 at 14:19:24.
 */
class geonames_data_providerTest extends PHPUnit_Framework_TestCase {

    /**
     * @var geonames_data_provider
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new geonames_data_provider('imranomar');
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers geonames_data_provider::geolocate
     * @todo Implement testGeolocate().
     */
    public function testGeolocate() 
    {
        
        //test with a correct geonameid and lat, lng values
        $soap_geoname_id = new SoapVar(8201288,XSD_DECIMAL,null,null,'geo_array');
        if($soap_geoname_id==$this->object->geolocate(25.27,  55.30))
        {
            $this->assertTrue(true);
        }
        else
        {
            $this->assertTrue(false);
        }
 
        // trying to get geonameid of unavailable lat,lng values
        if($this->object->geolocate(222215.27,  52222455.30)=='An error occured: Geonameid could not be found')
        {
            $this->assertTrue(true);
        }
        else
        {
            $this->assertFalse(true);
        }
        
        // trying to get geonameid of incorrect lat type
        if($this->object->geolocate('222h215.27',  52222455.30)=='An error occured: Geonameid could not be found')
        {
            $this->assertTrue(true);
        }
        else
        {
            $this->assertFalse(true);
        }
        
    }

    /**
     * @covers geonames_data_provider::describe
     * @todo Implement testDescribe().
     */
    public function testDescribe() 
    {
        // trying to get description of a correct geonameid
        $geo_array = $this->object->describe(6295630);
       
        $soap_toponym = new SoapVar('Earth',XSD_STRING,null,null,'geo_array');
        if($geo_array[0]==$soap_toponym)
        {
            $this->assertTrue(true);
        }
        else
        {
            $this->assertFalse(true);
        }
        
        // trying to get description of a correct geonameid
        if($this->object->describe(6292342345630)=='An error occured: Toponym could not be found')
        {
            $this->assertTrue(true);
        }
        else
        {
            $this->assertFalse(true);
        }
        
        // trying to get description of incorrect geonameid type passed
        if($this->object->describe('incprrect_type')=='An error occured: Toponym could not be found')
        {
            $this->assertTrue(true);
        }
        else
        {
            $this->assertFalse(true);
        }
    }

    /**
     * @covers geonames_data_provider::isXML
     * @todo Implement testIsXML().
     */
    public function testIsXML() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

}

?>
